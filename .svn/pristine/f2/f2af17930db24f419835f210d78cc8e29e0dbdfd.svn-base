import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.ProgressBar;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.File;
import java.util.ArrayList;
import java.util.HashSet;

public class SetupController extends Thread
{
    private GameScanner scan;
    private MainMenuController parent;
    private Thread th;
    private HashSet<String> libraries = new HashSet<String>();

    @FXML
    private ProgressBar progress = new ProgressBar();

    @FXML
    private Button Start = new Button();

    @FXML
    private Button Close;
    
    @FXML
    private Label gameName;
    
    @FXML
    private ComboBox<String> librarySelect = new ComboBox<String>();;
    
    @FXML
    private TextField Path;
    private Stage dialogStage;

    public SetupController()
    {
    	
    }

    public void setParent(MainMenuController parent)
    {
    	libraries.clear();
        this.parent = parent;
        setLibraries();
        
    }

    private void setLibraries() {
    	for (Game test:parent.games){
    		String temp = new StringBuilder(test.directory).reverse().toString();
			temp = temp.split("\\\\",2)[1];
			temp = new StringBuilder(temp).reverse().toString();
			temp = temp + "\\";
			libraries.add(temp);	
    	}
    	librarySelect.getItems().clear();
        if(libraries!=null){
        	librarySelect.getItems().addAll(libraries);
        }
     
	}

	public void setDialogStage(Stage dialogStage)
    {
        this.dialogStage = dialogStage;
    }

	@FXML
	private void HandleComboBox(){
		Path.setText(librarySelect.getValue());
		Start.setText("Update");
	}
	
	public void addToComboBox(){
		libraries.add(Path.getText());
		librarySelect.getItems().clear();
		librarySelect.getItems().addAll(libraries);
	}
	
    @FXML
    private void HandleStart()
    {
    	if(Path.getText()!=null){
	        File f = new File(Path.getText());
	
	        if (f.exists())
	        {
	        	Start.setDisable(true);
	        	Path.setDisable(true);
	        	librarySelect.setDisable(true);
	        	gameName.setText("Starting Scan...");
	        	SetProgress(0);
	            DisableStartButton();
	            DisablePath();
	            th = new Thread(this, "Game Scanner");
	            th.start();
	            th.interrupt();
	        }
	        else
	        {
	        	Path.setText("Path not found");
	        }
    	}else{Path.setText("Path not found");
}
    }

    public void SetProgress(float percent)
    {
        progress.setProgress(percent/100);
    }

    @FXML
    private void HandleCancel()
    {
    	if(scan != null){
            parent.setData(scan.getGames());
		}
        dialogStage.close();
    }
    
    @FXML
    private void HandleRemoveLibrary()
    {
    	ArrayList<Game> remove = new ArrayList<Game>();
    	for( Game curGam:parent.games){
    		String temp = new StringBuilder(curGam.directory).reverse().toString();
			temp = temp.split("\\\\",2)[1];
			temp = new StringBuilder(temp).reverse().toString();
			temp = temp + "\\";
			
    		if (temp.equals(librarySelect.getValue())){
    			remove.add(curGam);
    		}
    	}
    	for(Game curGame:remove){
    		parent.games.remove(curGame);
    	}
    	
        parent.setData(new ArrayList<Game>() );
        librarySelect.getSelectionModel().clearSelection();
        librarySelect.setValue(null);
        librarySelect = null;
        librarySelect = new ComboBox<String>();
        this.setLibraries();
        
    }

    public void run()
    {
        scan = new GameScanner(Path.getText(), this, parent);

    }

    @FXML
    public void EnableStartButton()
    {
        Start.setDisable(false);
    }

    public void ChangeStartText(){
    	Start.setText("Add");
    }
    public void DisableStartButton()
    {
        Start.setDisable(true);
    }

    public void EnablePath()
    {
        Path.setDisable(false);
    }

    public void DisablePath()
    {
        Path.setDisable(true);
    }

    public void updateGames(){
    	/*if(scan != null){
            parent.setData(scan.getGames());
		}*/
    }
	public void SetGame(String string) {
		gameName.setText(string);
	}

	public void EnablelibrarySelect() {
		librarySelect.setDisable(false);
	}
}